{
    "openapi": "3.0.0",
    "info": {
        "title": "Book Api documentation",
        "description": "Book Api documentation",
        "contact": {
            "email": "kuriyamehul@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login to get an access token",
                "operationId": "72da9856cfaf0c9d012815b263d9f6eb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Admin@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|XsFj...yourTokenHere..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required. The password field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Retrieve a List of Books",
                "description": "Fetches a list of all available books. Authentication is required.",
                "operationId": "getBooks",
                "responses": {
                    "200": {
                        "description": "Books retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Indicates the success of the operation",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Book ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "description": "Title of the book",
                                                        "type": "string",
                                                        "example": "1984"
                                                    },
                                                    "author": {
                                                        "description": "Author of the book",
                                                        "type": "string",
                                                        "example": "George Orwell"
                                                    },
                                                    "published_year": {
                                                        "description": "Year the book was published",
                                                        "type": "integer",
                                                        "example": 1949
                                                    },
                                                    "is_available": {
                                                        "description": "Availability status of the book",
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Indicates failure",
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Failed to fetch books"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/books/search": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Search for books",
                "description": "Search for books by a keyword.",
                "operationId": "bf45fa17403ffd449810ec744b0c5716",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Laravel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful search",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Laravel for Beginners"
                                                    },
                                                    "author": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to search books",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to search books"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/rentals": {
            "post": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Create a rental",
                "description": "Rent a book for a user.",
                "operationId": "74b4033eeb2ec5d519c682808a80b01e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "book_id": {
                                        "description": "ID of the book to rent",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "description": "ID of the user renting the book",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rental created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the rental",
                                            "type": "integer"
                                        },
                                        "user_id": {
                                            "description": "ID of the user",
                                            "type": "integer"
                                        },
                                        "book_id": {
                                            "description": "ID of the rented book",
                                            "type": "integer"
                                        },
                                        "rented_at": {
                                            "description": "Date and time when the book was rented",
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "due_at": {
                                            "description": "Due date for returning the book",
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "This book is already rented."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/rentals/return/{id}": {
            "put": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Return a rented book",
                "description": "Mark a rented book as returned.",
                "operationId": "43e221d193680f5595aef0b6146a3ac6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the rental to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rental returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the rental",
                                            "type": "integer"
                                        },
                                        "user_id": {
                                            "description": "ID of the user",
                                            "type": "integer"
                                        },
                                        "book_id": {
                                            "description": "ID of the rented book",
                                            "type": "integer"
                                        },
                                        "rented_at": {
                                            "description": "Date and time when the book was rented",
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "due_at": {
                                            "description": "Due date for returning the book",
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "returned_at": {
                                            "description": "Date and time when the book was returned",
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "overdue": {
                                            "description": "Indicates if the rental is overdue",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "This rental has already been returned."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/rentals/history": {
            "get": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Get rental history",
                "description": "Retrieve the rental history for a specific user.",
                "operationId": "4df628d78cb2ca0df5dfc0494c3d7551",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID of the user to get rental history for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rental history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "ID of the rental",
                                                "type": "integer"
                                            },
                                            "user_id": {
                                                "description": "ID of the user",
                                                "type": "integer"
                                            },
                                            "book_id": {
                                                "description": "ID of the rented book",
                                                "type": "integer"
                                            },
                                            "rented_at": {
                                                "description": "Date and time when the book was rented",
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "due_at": {
                                                "description": "Due date for returning the book",
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "returned_at": {
                                                "description": "Date and time when the book was returned",
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "overdue": {
                                                "description": "Indicates if the rental is overdue",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User ID is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No rental history found for this user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/stats/most-overdue-book": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get the most overdue book",
                "description": "Retrieve the book that is currently the most overdue based on rental records.",
                "operationId": "96e1001670b2cdc8de64bcbd71520b38",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of the most overdue book",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Laravel for Beginners"
                                        },
                                        "author": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "due_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-09-15"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No overdue books found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No overdue books found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while retrieving the most overdue book"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/stats/most-popular-book": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get the most popular book",
                "description": "Retrieve the book that has the highest rental count.",
                "operationId": "e3cd745c230564b655612e47daa7e80d",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of the most popular book",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Laravel for Beginners"
                                        },
                                        "author": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "rental_count": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No books found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No books found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while retrieving the most popular book"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/stats/least-popular-book": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get the least popular book",
                "description": "Retrieve the book that has the lowest rental count.",
                "operationId": "69a328574527ea225973742feddcbfc1",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of the least popular book",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Learning PHP"
                                        },
                                        "author": {
                                            "type": "string",
                                            "example": "Jane Smith"
                                        },
                                        "rental_count": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No books found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No books found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while retrieving the least popular book"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Books",
            "description": "Books"
        },
        {
            "name": "Rentals",
            "description": "Rentals"
        },
        {
            "name": "Statistics",
            "description": "Statistics"
        }
    ]
}